(comment "CPSA 4.4.2")
(comment "Extracted shapes")

(herald "Needham-Schroeder Public-Key Protocol" (comment "Bound.")
  (bound 12) (limit 4000) (check-nonces))

(comment "CPSA 4.4.2")

(comment "All input read from ns_binding_cpa.scm")

(comment "Step count limited to 4000")

(comment "Strand count bounded at 12")

(comment "Nonces checked first")

(defprotocol ns-bound basic
  (defrole init
    (vars (a b name) (n1 n2 text) (r1 r2 r3 data))
    (trace
      (send
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defrole resp
    (vars (b a name) (n2 n1 text) (r1 r2 r3 data))
    (trace
      (recv
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (comment "Needham-Schroeder"))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (comment "Initiator point-of-view")
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 0)
  (unrealized (0 1) (0 3))
  (origs (n1 (0 0)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (operation encryption-test (displaced 1 2 resp 4)
    (enc
      (enc
        (hash
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3
          "ns-3" "empty") (privk a)) (privk b)) (0 3))
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 7)
  (parent 0)
  (realized)
  (shape)
  (maps ((0) ((a a) (b b) (n1 n1) (r1 r1) (r3 r3) (n2 n2) (r2 r2))))
  (origs (n1 (0 0))))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (defstrand resp 2 (r1 r1) (r2 r2) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (precedes ((0 0) (1 0)) ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1))
    ((2 3) (0 3)))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (operation encryption-test (added-strand resp 4)
    (enc
      (enc
        (hash
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3
          "ns-3" "empty") (privk a)) (privk b)) (0 3))
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 8)
  (parent 0)
  (realized)
  (shape)
  (maps ((0) ((a a) (b b) (n1 n1) (r1 r1) (r3 r3) (n2 n2) (r2 r2))))
  (origs (n1 (0 0))))

(comment "Nothing left to do")

(defprotocol ns-bound basic
  (defrole init
    (vars (a b name) (n1 n2 text) (r1 r2 r3 data))
    (trace
      (send
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defrole resp
    (vars (b a name) (n2 n1 text) (r1 r2 r3 data))
    (trace
      (recv
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (comment "Needham-Schroeder"))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n2 n1 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (comment "Responder point-of-view")
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 12)
  (unrealized (0 0) (0 2))
  (origs (n2 (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n2 n1 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand init 3 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (precedes ((0 1) (1 1)) ((1 0) (0 0)) ((1 2) (0 2)))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (operation encryption-test (displaced 2 1 init 3)
    (enc
      (hash
        (enc
          (hash
            (enc
              (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3-0
        "ns-3" "empty") (privk a)) (0 2))
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))))
  (label 19)
  (parent 12)
  (realized)
  (shape)
  (maps ((0) ((a a) (b b) (n2 n2) (r2 r2) (n1 n1) (r1 r1) (r3 r3))))
  (origs (n2 (0 1))))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n2 n1 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand init 1 (r1 r1) (n1 n1) (a a) (b b))
  (defstrand init 3 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (precedes ((0 1) (2 1)) ((1 0) (0 0)) ((2 2) (0 2)))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (operation encryption-test (displaced 3 2 init 3)
    (enc
      (hash
        (enc
          (hash
            (enc
              (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3-0
        "ns-3" "empty") (privk a)) (0 2))
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a)))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))))
  (label 22)
  (parent 12)
  (realized)
  (shape)
  (maps ((0) ((a a) (b b) (n2 n2) (r2 r2) (n1 n1) (r1 r1) (r3 r3))))
  (origs (n2 (0 1))))

(comment "Nothing left to do")

(defprotocol ns-bound basic
  (defrole init
    (vars (a b name) (n1 n2 text) (r1 r2 r3 data))
    (trace
      (send
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defrole resp
    (vars (b a name) (n2 n1 text) (r1 r2 r3 data))
    (trace
      (recv
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (comment "Needham-Schroeder"))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (goals
    (forall ((n1 n2 text) (r1 r3 data) (a b name) (z strd))
      (implies
        (and (p "init" z 4) (p "init" "a" z a) (p "init" "b" z b)
          (p "init" "n1" z n1) (p "init" "n2" z n2) (p "init" "r1" z r1)
          (p "init" "r3" z r3) (non (privk a)) (non (privk b))
          (uniq-at n1 z 0) (ugen r1) (ugen r3))
        (exists ((z-0 strd))
          (and (p "resp" z-0 4) (p "resp" "a" z-0 a)
            (p "resp" "b" z-0 b) (p "resp" "n1" z-0 n1)
            (p "resp" "n2" z-0 n2))))))
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 33)
  (unrealized (0 1) (0 3))
  (origs (n1 (0 0)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (operation encryption-test (displaced 1 2 resp 4)
    (enc
      (enc
        (hash
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3
          "ns-3" "empty") (privk a)) (privk b)) (0 3))
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 40)
  (parent 33)
  (realized)
  (shape)
  (satisfies yes)
  (maps ((0) ((n1 n1) (n2 n2) (r1 r1) (r3 r3) (a a) (b b) (r2 r2))))
  (origs (n1 (0 0))))

(defskeleton ns-bound
  (vars (r1 r3 r2 data) (n1 n2 text) (a b name))
  (defstrand init 4 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (defstrand resp 2 (r1 r1) (r2 r2) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (precedes ((0 0) (1 0)) ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1))
    ((2 3) (0 3)))
  (non-orig (privk a) (privk b))
  (uniq-orig n1)
  (uniq-gen r1 r3)
  (operation encryption-test (added-strand resp 4)
    (enc
      (enc
        (hash
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3
          "ns-3" "empty") (privk a)) (privk b)) (0 3))
  (traces
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)))))
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 41)
  (parent 33)
  (realized)
  (shape)
  (satisfies yes)
  (maps ((0) ((n1 n1) (n2 n2) (r1 r1) (r3 r3) (a a) (b b) (r2 r2))))
  (origs (n1 (0 0))))

(comment "Nothing left to do")

(defprotocol ns-bound basic
  (defrole init
    (vars (a b name) (n1 n2 text) (r1 r2 r3 data))
    (trace
      (send
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (recv
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defrole resp
    (vars (b a name) (n2 n1 text) (r1 r2 r3 data))
    (trace
      (recv
        (cat (enc n1 a (pubk b))
          (enc
            (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
              n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (comment "Needham-Schroeder"))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n1 n2 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (goals
    (forall ((n1 n2 text) (r2 data) (a b name) (z strd))
      (implies
        (and (p "resp" z 4) (p "resp" "a" z a) (p "resp" "b" z b)
          (p "resp" "n1" z n1) (p "resp" "n2" z n2) (p "resp" "r2" z r2)
          (non (privk a)) (non (privk b)) (uniq-at n2 z 1) (ugen r2))
        (exists ((z-0 strd))
          (and (p "init" z-0 3) (p "init" "a" z-0 a)
            (p "init" "b" z-0 b) (p "init" "n1" z-0 n1)
            (p "init" "n2" z-0 n2))))))
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b)))))
  (label 45)
  (unrealized (0 0) (0 2))
  (origs (n2 (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n1 n2 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand init 3 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (precedes ((0 1) (1 1)) ((1 0) (0 0)) ((1 2) (0 2)))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (operation encryption-test (displaced 2 1 init 3)
    (enc
      (hash
        (enc
          (hash
            (enc
              (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3-0
        "ns-3" "empty") (privk a)) (0 2))
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))))
  (label 52)
  (parent 45)
  (realized)
  (shape)
  (satisfies yes)
  (maps ((0) ((n1 n1) (n2 n2) (r2 r2) (a a) (b b) (r1 r1) (r3 r3))))
  (origs (n2 (0 1))))

(defskeleton ns-bound
  (vars (r2 r1 r3 data) (n1 n2 text) (a b name))
  (defstrand resp 4 (r1 r1) (r2 r2) (r3 r3) (n2 n2) (n1 n1) (b b) (a a))
  (defstrand init 1 (r1 r1) (n1 n1) (a a) (b b))
  (defstrand init 3 (r1 r1) (r2 r2) (r3 r3) (n1 n1) (n2 n2) (a a) (b b))
  (precedes ((0 1) (2 1)) ((1 0) (0 0)) ((2 2) (0 2)))
  (non-orig (privk a) (privk b))
  (uniq-orig n2)
  (uniq-gen r2)
  (operation encryption-test (displaced 3 2 init 3)
    (enc
      (hash
        (enc
          (hash
            (enc
              (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b)) r3-0
        "ns-3" "empty") (privk a)) (0 2))
  (traces
    ((recv
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (send
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (recv
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))
      (send
        (enc
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a)) (privk b))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a)))))
    ((send
       (cat (enc n1 a (pubk b))
         (enc
           (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1 "ns-1"
             n1 a) (privk a))))
      (recv
        (cat (enc n1 n2 (pubk a))
          (enc
            (hash
              (enc
                (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                  "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))))
      (send
        (cat (enc n2 (pubk b))
          (enc
            (hash
              (enc
                (hash
                  (enc
                    (hash (enc (hash "ns-pk" "flawed" a b) (privk a)) r1
                      "ns-1" n1 a) (privk a)) r2 "ns-2" n2) (privk b))
              r3 "ns-3" "empty") (privk a))))))
  (label 55)
  (parent 45)
  (realized)
  (shape)
  (satisfies yes)
  (maps ((0) ((n1 n1) (n2 n2) (r2 r2) (a a) (b b) (r1 r1) (r3 r3))))
  (origs (n2 (0 1))))

(comment "Nothing left to do")
