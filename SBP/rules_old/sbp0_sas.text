(herald
  "Session Binding Protocol with TLS 1.2 (combined proxy and server as used in paper implementation"
  (bound 12))

(comment "CPSA 4.4.2")
(comment "Coherent logic")

(comment "CPSA 4.4.2")

(comment "All input read from sbp0.scm")

(comment "Strand count bounded at 12")

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc request (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie mesg) (response httpdata) (request httprqst) (p password)
      (cr sr random32) (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "client" z 8) (p "client" "cookie" z cookie)
        (p "client" "response" z response)
        (p "client" "request" z request) (p "client" "p" z p)
        (p "client" "cr" z cr) (p "client" "sr" z sr)
        (p "client" "pms" z pms) (p "client" "c" z c)
        (p "client" "s" z s) (p "client" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq-at cr z 0) (uniq-at pms z 2))
      (or
        (exists ((cookie-0 data) (z-0 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cookie" z-0 cookie-0)
            (p "server" "response" z-0 response)
            (p "server" "request" z-0 request) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (prec z 0 z-0 0) (prec z 2 z-0 2) (prec z 4 z-0 4)
            (prec z 6 z-0 6) (prec z-0 1 z 1) (prec z-0 3 z 3)
            (prec z-0 5 z 5) (prec z-0 7 z 7)))
        (exists ((cookie-0 data) (cr-0 sr-0 random32) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 2) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-1 0) (prec z 2 z-1 2) (prec z 4 z-1 4)
            (prec z 6 z-1 6) (prec z-0 1 z 1) (prec z-1 3 z 3)
            (prec z-1 5 z 5) (prec z-1 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 4) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "s" z-0 s)
            (p "server" "ca" z-0 ca) (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-1 4) (prec z 6 z-1 6)
            (prec z-0 3 z 3) (prec z-1 1 z 1) (prec z-1 5 z 5)
            (prec z-1 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 4) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "s" z-0 s)
            (p "server" "ca" z-0 ca) (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-1 4) (prec z 6 z-1 6)
            (prec z-0 1 z 1) (prec z-0 3 z 3) (prec z-1 5 z 5)
            (prec z-1 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 6) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cookie" z-0 cookie-0) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-0 4) (prec z 4 z-1 4)
            (prec z 6 z-1 6) (prec z-0 3 z 3) (prec z-0 5 z 5)
            (prec z-1 1 z 1) (prec z-1 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 6) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cookie" z-0 cookie-0) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-0 4) (prec z 4 z-1 4)
            (prec z 6 z-1 6) (prec z-0 1 z 1) (prec z-0 5 z 5)
            (prec z-1 3 z 3) (prec z-1 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 2) (p "server" z-1 4) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "s" z-1 s)
            (p "server" "ca" z-1 ca) (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-1 0) (prec z 0 z-2 0) (prec z 2 z-1 2)
            (prec z 2 z-2 2) (prec z 4 z-2 4) (prec z 6 z-2 6)
            (prec z-0 1 z 1) (prec z-1 3 z 3) (prec z-2 5 z 5)
            (prec z-2 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 6) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cookie" z-0 cookie-0) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-0 4) (prec z 4 z-1 4)
            (prec z 6 z-1 6) (prec z-0 1 z 1) (prec z-0 3 z 3)
            (prec z-0 5 z 5) (prec z-1 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 6) (p "server" z-1 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cookie" z-0 cookie-0) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0)
            (p "server" "response" z-1 response)
            (p "server" "request" z-1 request) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 2 z-0 2)
            (prec z 2 z-1 2) (prec z 4 z-0 4) (prec z 4 z-1 4)
            (prec z 6 z-1 6) (prec z-0 5 z 5) (prec z-1 1 z 1)
            (prec z-1 3 z 3) (prec z-1 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 2) (p "server" z-1 6) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-1 0) (prec z 0 z-2 0) (prec z 2 z-1 2)
            (prec z 2 z-2 2) (prec z 4 z-1 4) (prec z 4 z-2 4)
            (prec z 6 z-2 6) (prec z-0 1 z 1) (prec z-1 3 z 3)
            (prec z-1 5 z 5) (prec z-2 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 4) (p "server" z-1 6) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "s" z-0 s)
            (p "server" "ca" z-0 ca) (p "server" "cookie" z-1 cookie-0)
            (p "server" "p" z-1 p) (p "server" "cr" z-1 cr)
            (p "server" "sr" z-1 sr) (p "server" "pms" z-1 pms)
            (p "server" "c" z-1 c) (p "server" "s" z-1 s)
            (p "server" "ca" z-1 ca) (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 0 z-2 0)
            (prec z 2 z-0 2) (prec z 2 z-1 2) (prec z 2 z-2 2)
            (prec z 4 z-1 4) (prec z 4 z-2 4) (prec z 6 z-2 6)
            (prec z-0 3 z 3) (prec z-1 1 z 1) (prec z-1 5 z 5)
            (prec z-2 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 2) (p "server" z-1 6) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cookie" z-1 cookie-0) (p "server" "p" z-1 p)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "c" z-1 c)
            (p "server" "s" z-1 s) (p "server" "ca" z-1 ca)
            (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-1 0) (prec z 0 z-2 0) (prec z 2 z-1 2)
            (prec z 2 z-2 2) (prec z 4 z-1 4) (prec z 4 z-2 4)
            (prec z 6 z-2 6) (prec z-0 1 z 1) (prec z-1 5 z 5)
            (prec z-2 3 z 3) (prec z-2 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 4) (p "server" z-1 6) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "s" z-0 s)
            (p "server" "ca" z-0 ca) (p "server" "cookie" z-1 cookie-0)
            (p "server" "p" z-1 p) (p "server" "cr" z-1 cr)
            (p "server" "sr" z-1 sr) (p "server" "pms" z-1 pms)
            (p "server" "c" z-1 c) (p "server" "s" z-1 s)
            (p "server" "ca" z-1 ca) (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 0 z-2 0)
            (prec z 2 z-0 2) (prec z 2 z-1 2) (prec z 2 z-2 2)
            (prec z 4 z-1 4) (prec z 4 z-2 4) (prec z 6 z-2 6)
            (prec z-0 3 z 3) (prec z-1 5 z 5) (prec z-2 1 z 1)
            (prec z-2 7 z 7)))
        (exists ((cookie-0 data) (z-0 z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 4) (p "server" z-1 6) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "s" z-0 s)
            (p "server" "ca" z-0 ca) (p "server" "cookie" z-1 cookie-0)
            (p "server" "p" z-1 p) (p "server" "cr" z-1 cr)
            (p "server" "sr" z-1 sr) (p "server" "pms" z-1 pms)
            (p "server" "c" z-1 c) (p "server" "s" z-1 s)
            (p "server" "ca" z-1 ca) (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-0 0) (prec z 0 z-1 0) (prec z 0 z-2 0)
            (prec z 2 z-0 2) (prec z 2 z-1 2) (prec z 2 z-2 2)
            (prec z 4 z-1 4) (prec z 4 z-2 4) (prec z 6 z-2 6)
            (prec z-0 1 z 1) (prec z-0 3 z 3) (prec z-1 5 z 5)
            (prec z-2 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (z-0 z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "server" z-0 2) (p "server" z-1 4) (p "server" z-2 6)
            (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (p "server" "cr" z-1 cr) (p "server" "sr" z-1 sr)
            (p "server" "pms" z-1 pms) (p "server" "s" z-1 s)
            (p "server" "ca" z-1 ca) (p "server" "cookie" z-2 cookie-0)
            (p "server" "p" z-2 p) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "c" z-2 c) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-1 0) (prec z 0 z-2 0) (prec z 0 z-3 0)
            (prec z 2 z-1 2) (prec z 2 z-2 2) (prec z 2 z-3 2)
            (prec z 4 z-2 4) (prec z 4 z-3 4) (prec z 6 z-3 6)
            (prec z-0 1 z 1) (prec z-1 3 z 3) (prec z-2 5 z 5)
            (prec z-3 7 z 7)))))))

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc request (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie mesg) (response httpdata) (request httprqst) (p password)
      (cr sr random32) (pms random48) (s ca c name) (z z-0 strd))
    (implies
      (and (p "client" z 8) (p "" z-0 2) (p "client" "cookie" z cookie)
        (p "client" "response" z response)
        (p "client" "request" z request) (p "client" "p" z p)
        (p "client" "cr" z cr) (p "client" "sr" z sr)
        (p "client" "pms" z pms) (p "client" "c" z c)
        (p "client" "s" z s) (p "client" "ca" z ca) (p "" "x" z-0 p)
        (non (privk s)) (non (privk ca)) (pnon p) (uniq-at cr z 0)
        (uniq-at pms z 2))
      (or
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0)
            (p "server" "cookie" z-2 cookie-0)
            (p "server" "response" z-2 response)
            (p "server" "request" z-2 request) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (prec z 0 z-2 0) (prec z 2 z-2 2) (prec z 4 z-2 4)
            (prec z 6 z-2 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-2 3 z 3) (prec z-2 5 z 5) (prec z-2 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 cr-1 sr-1 random32)
            (pms-0 random48) (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 2) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr-1)
            (p "server" "sr" z-2 sr-1) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-3 0) (prec z 2 z-3 2) (prec z 4 z-3 4)
            (prec z 6 z-3 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-3 3 z 3) (prec z-3 5 z 5) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 4) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-3 4) (prec z 6 z-3 6)
            (prec z-1 4 z-0 0) (prec z-2 3 z 3) (prec z-3 1 z 1)
            (prec z-3 5 z 5) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 4) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-3 4) (prec z 6 z-3 6)
            (prec z-1 4 z-0 0) (prec z-2 1 z 1) (prec z-2 3 z 3)
            (prec z-3 5 z 5) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 6) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0)
            (p "server" "cookie" z-2 cookie-0) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-2 4) (prec z 4 z-3 4)
            (prec z 6 z-3 6) (prec z-1 4 z-0 0) (prec z-2 3 z 3)
            (prec z-2 5 z 5) (prec z-3 1 z 1) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 6) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0)
            (p "server" "cookie" z-2 cookie-0) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-2 4) (prec z 4 z-3 4)
            (prec z 6 z-3 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-2 5 z 5) (prec z-3 3 z 3) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 cr-1 sr-1 random32)
            (pms-0 random48) (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 2) (p "server" z-3 4)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr-1)
            (p "server" "sr" z-2 sr-1) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cr" z-3 cr)
            (p "server" "sr" z-3 sr) (p "server" "pms" z-3 pms)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-3 0) (prec z 0 z-4 0) (prec z 2 z-3 2)
            (prec z 2 z-4 2) (prec z 4 z-4 4) (prec z 6 z-4 6)
            (prec z-1 4 z-0 0) (prec z-2 1 z 1) (prec z-3 3 z 3)
            (prec z-4 5 z 5) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 6) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0)
            (p "server" "cookie" z-2 cookie-0) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-2 4) (prec z 4 z-3 4)
            (prec z 6 z-3 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-2 3 z 3) (prec z-2 5 z 5) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 6) (p "server" z-3 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0)
            (p "server" "cookie" z-2 cookie-0) (p "server" "p" z-2 p)
            (p "server" "cr" z-2 cr) (p "server" "sr" z-2 sr)
            (p "server" "pms" z-2 pms) (p "server" "c" z-2 c)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0)
            (p "server" "response" z-3 response)
            (p "server" "request" z-3 request) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 2 z-2 2)
            (prec z 2 z-3 2) (prec z 4 z-2 4) (prec z 4 z-3 4)
            (prec z 6 z-3 6) (prec z-1 4 z-0 0) (prec z-2 5 z 5)
            (prec z-3 1 z 1) (prec z-3 3 z 3) (prec z-3 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 cr-1 sr-1 random32)
            (pms-0 random48) (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 2) (p "server" z-3 6)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr-1)
            (p "server" "sr" z-2 sr-1) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cookie" z-3 cookie-0)
            (p "server" "p" z-3 p) (p "server" "cr" z-3 cr)
            (p "server" "sr" z-3 sr) (p "server" "pms" z-3 pms)
            (p "server" "c" z-3 c) (p "server" "s" z-3 s)
            (p "server" "ca" z-3 ca) (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-3 0) (prec z 0 z-4 0) (prec z 2 z-3 2)
            (prec z 2 z-4 2) (prec z 4 z-3 4) (prec z 4 z-4 4)
            (prec z 6 z-4 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-3 3 z 3) (prec z-3 5 z 5) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 4) (p "server" z-3 6)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 0 z-4 0)
            (prec z 2 z-2 2) (prec z 2 z-3 2) (prec z 2 z-4 2)
            (prec z 4 z-3 4) (prec z 4 z-4 4) (prec z 6 z-4 6)
            (prec z-1 4 z-0 0) (prec z-2 3 z 3) (prec z-3 1 z 1)
            (prec z-3 5 z 5) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 cr-1 sr-1 random32)
            (pms-0 random48) (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 2) (p "server" z-3 6)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr-1)
            (p "server" "sr" z-2 sr-1) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cookie" z-3 cookie-0)
            (p "server" "p" z-3 p) (p "server" "cr" z-3 cr)
            (p "server" "sr" z-3 sr) (p "server" "pms" z-3 pms)
            (p "server" "c" z-3 c) (p "server" "s" z-3 s)
            (p "server" "ca" z-3 ca) (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-3 0) (prec z 0 z-4 0) (prec z 2 z-3 2)
            (prec z 2 z-4 2) (prec z 4 z-3 4) (prec z 4 z-4 4)
            (prec z 6 z-4 6) (prec z-1 4 z-0 0) (prec z-2 1 z 1)
            (prec z-3 5 z 5) (prec z-4 3 z 3) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 4) (p "server" z-3 6)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 0 z-4 0)
            (prec z 2 z-2 2) (prec z 2 z-3 2) (prec z 2 z-4 2)
            (prec z 4 z-3 4) (prec z 4 z-4 4) (prec z 6 z-4 6)
            (prec z-1 4 z-0 0) (prec z-2 3 z 3) (prec z-3 5 z 5)
            (prec z-4 1 z 1) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 random32) (pms-0 random48)
            (c-0 s-0 ca-0 name) (z-1 z-2 z-3 z-4 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 4) (p "server" z-3 6)
            (p "server" z-4 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr)
            (p "server" "sr" z-2 sr) (p "server" "pms" z-2 pms)
            (p "server" "s" z-2 s) (p "server" "ca" z-2 ca)
            (p "server" "cookie" z-3 cookie-0) (p "server" "p" z-3 p)
            (p "server" "cr" z-3 cr) (p "server" "sr" z-3 sr)
            (p "server" "pms" z-3 pms) (p "server" "c" z-3 c)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (p "server" "cookie" z-4 cookie-0)
            (p "server" "response" z-4 response)
            (p "server" "request" z-4 request) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (prec z 0 z-2 0) (prec z 0 z-3 0) (prec z 0 z-4 0)
            (prec z 2 z-2 2) (prec z 2 z-3 2) (prec z 2 z-4 2)
            (prec z 4 z-3 4) (prec z 4 z-4 4) (prec z 6 z-4 6)
            (prec z-1 4 z-0 0) (prec z-2 1 z 1) (prec z-2 3 z 3)
            (prec z-3 5 z 5) (prec z-4 7 z 7)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 cr-1 sr-1 random32)
            (pms-0 random48) (c-0 s-0 ca-0 name)
            (z-1 z-2 z-3 z-4 z-5 strd))
          (and (= cookie (hash cookie-0 (hash pms cr sr)))
            (p "client" z-1 5) (p "server" z-2 2) (p "server" z-3 4)
            (p "server" z-4 6) (p "server" z-5 8)
            (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
            (p "client" "p" z-1 p) (p "client" "cr" z-1 cr-0)
            (p "client" "sr" z-1 sr-0) (p "client" "pms" z-1 pms-0)
            (p "client" "c" z-1 c-0) (p "client" "s" z-1 s-0)
            (p "client" "ca" z-1 ca-0) (p "server" "cr" z-2 cr-1)
            (p "server" "sr" z-2 sr-1) (p "server" "s" z-2 s)
            (p "server" "ca" z-2 ca) (p "server" "cr" z-3 cr)
            (p "server" "sr" z-3 sr) (p "server" "pms" z-3 pms)
            (p "server" "s" z-3 s) (p "server" "ca" z-3 ca)
            (p "server" "cookie" z-4 cookie-0) (p "server" "p" z-4 p)
            (p "server" "cr" z-4 cr) (p "server" "sr" z-4 sr)
            (p "server" "pms" z-4 pms) (p "server" "c" z-4 c)
            (p "server" "s" z-4 s) (p "server" "ca" z-4 ca)
            (p "server" "cookie" z-5 cookie-0)
            (p "server" "response" z-5 response)
            (p "server" "request" z-5 request) (p "server" "p" z-5 p)
            (p "server" "cr" z-5 cr) (p "server" "sr" z-5 sr)
            (p "server" "pms" z-5 pms) (p "server" "c" z-5 c)
            (p "server" "s" z-5 s) (p "server" "ca" z-5 ca)
            (prec z 0 z-3 0) (prec z 0 z-4 0) (prec z 0 z-5 0)
            (prec z 2 z-3 2) (prec z 2 z-4 2) (prec z 2 z-5 2)
            (prec z 4 z-4 4) (prec z 4 z-5 4) (prec z 6 z-5 6)
            (prec z-1 4 z-0 0) (prec z-2 1 z 1) (prec z-3 3 z 3)
            (prec z-4 5 z 5) (prec z-5 7 z 7)))))))

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc request (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie mesg) (response httpdata) (request httprqst) (p password)
      (cr sr random32) (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "client" z 8) (p "client" "cookie" z cookie)
        (p "client" "response" z response)
        (p "client" "request" z request) (p "client" "p" z p)
        (p "client" "cr" z cr) (p "client" "sr" z sr)
        (p "client" "pms" z pms) (p "client" "c" z c)
        (p "client" "s" z s) (p "client" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq sr) (uniq-at cr z 0)
        (uniq-at pms z 2))
      (exists ((cookie-0 data) (z-0 strd))
        (and (= cookie (hash cookie-0 (hash pms cr sr)))
          (p "server" z-0 8)
          (p "client" "cookie" z (hash cookie-0 (hash pms cr sr)))
          (p "server" "cookie" z-0 cookie-0)
          (p "server" "response" z-0 response)
          (p "server" "request" z-0 request) (p "server" "p" z-0 p)
          (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
          (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
          (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
          (prec z 0 z-0 0) (prec z 2 z-0 2) (prec z 4 z-0 4)
          (prec z 6 z-0 6) (prec z-0 1 z 1) (prec z-0 3 z 3)
          (prec z-0 5 z 5) (prec z-0 7 z 7) (uniq-at sr z-0 1))))))

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc request (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie data) (request httprqst) (p password) (sr cr random32)
      (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "server" z 7) (p "server" "cookie" z cookie)
        (p "server" "request" z request) (p "server" "p" z p)
        (p "server" "cr" z cr) (p "server" "sr" z sr)
        (p "server" "pms" z pms) (p "server" "c" z c)
        (p "server" "s" z s) (p "server" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq-at sr z 1))
      (exists
        ((cr-0 sr-0 random32) (pms-0 random48) (c-0 s-0 ca-0 name)
          (z-0 strd))
        (and (p "client" z-0 5) (p "client" "p" z-0 p)
          (p "client" "cr" z-0 cr-0) (p "client" "sr" z-0 sr-0)
          (p "client" "pms" z-0 pms-0) (p "client" "c" z-0 c-0)
          (p "client" "s" z-0 s-0) (p "client" "ca" z-0 ca-0)
          (prec z-0 4 z 4))))))

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc request (hash cookie (hash pms cr sr))
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie data) (request httprqst) (p password) (sr cr random32)
      (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "server" z 7) (p "server" "cookie" z cookie)
        (p "server" "request" z request) (p "server" "p" z p)
        (p "server" "cr" z cr) (p "server" "sr" z sr)
        (p "server" "pms" z pms) (p "server" "c" z c)
        (p "server" "s" z s) (p "server" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq cr) (uniq pms) (uniq-at sr z 1))
      (exists
        ((cr-0 sr-0 random32) (pms-0 random48) (c-0 s-0 ca-0 name)
          (z-0 strd))
        (and (p "client" z-0 5) (p "client" "p" z-0 p)
          (p "client" "cr" z-0 cr-0) (p "client" "sr" z-0 sr-0)
          (p "client" "pms" z-0 pms-0) (p "client" "c" z-0 c-0)
          (p "client" "s" z-0 s-0) (p "client" "ca" z-0 ca-0)
          (prec z-0 4 z 4))))))
