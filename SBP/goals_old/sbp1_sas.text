(herald
  "Session Binding Protocol with TLS 1.2 (proxy and server seperate as in paper description (TLS connection from proxy to server))"
  (bound 12))

(comment "CPSA 4.4.2")
(comment "Coherent logic")

(comment "CPSA 4.4.2")

(comment "All input read from sbp1.scm")

(comment "Strand count bounded at 12")

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole proxy
    (vars (c prxy s ca name) (cr pr1 pr2 sr random32)
      (pms ppms random48) (p password) (cookie data) (ppk skey)
      (request httprqst) (response httpdata))
    (trace (recv cr)
      (send
        (cat pr1 prxy (pubk prxy)
          (enc (hash prxy (pubk prxy)) (privk ca))))
      (recv
        (cat (enc pms (pubk prxy))
          (enc
            (hash pms "client finished"
              (hash cr pr1
                (cat prxy (pubk prxy)
                  (enc (hash prxy (pubk prxy)) (privk ca)))
                (enc pms (pubk prxy))))
            (hash (hash pms cr pr1) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr pr1
              (cat prxy (pubk prxy)
                (enc (hash prxy (pubk prxy)) (privk ca)))
              (enc pms (pubk prxy))
              (enc
                (hash pms "client finished"
                  (hash cr pr1
                    (cat prxy (pubk prxy)
                      (enc (hash prxy (pubk prxy)) (privk ca)))
                    (enc pms (pubk prxy))))
                (hash (hash pms cr pr1) "client_write"))))
          (hash (hash pms cr pr1) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr pr1) "client_write")))
      (send pr2)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc ppms (pubk s))
          (enc
            (hash ppms "client finished"
              (hash pr2 sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc ppms (pubk s))))
            (hash (hash ppms pr2 sr) "client_write"))))
      (recv
        (enc
          (hash ppms "server finished"
            (hash pr2 sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc ppms (pubk s))
              (enc
                (hash ppms "client finished"
                  (hash pr2 sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc ppms (pubk s))))
                (hash (hash ppms pr2 sr) "client_write"))))
          (hash (hash ppms pr2 sr) "server_write")))
      (send (enc "login" c p (hash (hash ppms pr2 sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash ppms pr2 sr) "server_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk (hash pms cr pr1)))
          (hash (hash pms cr pr1) "server_write")))
      (recv
        (enc request (enc cookie (hash ppk (hash pms cr pr1)))
          (hash (hash pms cr pr1) "client_write")))
      (send
        (enc request cookie (hash (hash ppms pr2 sr) "client_write")))
      (recv (enc response (hash (hash ppms pr2 sr) "client_write")))
      (send (enc response (hash (hash pms cr pr1) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (recv (enc request cookie (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie mesg) (response httpdata) (request httprqst) (p password)
      (cr sr random32) (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "client" z 8) (p "client" "cookie" z cookie)
        (p "client" "response" z response)
        (p "client" "request" z request) (p "client" "p" z p)
        (p "client" "cr" z cr) (p "client" "sr" z sr)
        (p "client" "pms" z pms) (p "client" "c" z c)
        (p "client" "s" z s) (p "client" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq sr) (uniq-at cr z 0)
        (uniq-at pms z 2))
      (or
        (exists ((cookie-0 data) (z-0 strd))
          (and (= cookie cookie-0) (p "server" z-0 8)
            (p "client" "cookie" z cookie-0)
            (p "server" "cookie" z-0 cookie-0)
            (p "server" "response" z-0 response)
            (p "server" "request" z-0 request) (p "server" "p" z-0 p)
            (p "server" "cr" z-0 cr) (p "server" "sr" z-0 sr)
            (p "server" "pms" z-0 pms) (p "server" "c" z-0 c)
            (p "server" "s" z-0 s) (p "server" "ca" z-0 ca)
            (prec z 0 z-0 0) (prec z 2 z-0 2) (prec z 4 z-0 4)
            (prec z 6 z-0 6) (prec z-0 1 z 1) (prec z-0 3 z 3)
            (prec z-0 5 z 5) (prec z-0 7 z 7) (uniq-at sr z-0 1)))
        (exists
          ((cookie-0 data) (pr2 sr-0 random32) (ppms random48)
            (ppk skey) (z-0 strd))
          (and (= cookie (enc cookie-0 (hash ppk (hash pms cr sr))))
            (p "proxy" z-0 16)
            (p "client" "cookie" z
              (enc cookie-0 (hash ppk (hash pms cr sr))))
            (p "proxy" "cookie" z-0 cookie-0)
            (p "proxy" "response" z-0 response)
            (p "proxy" "request" z-0 request) (p "proxy" "p" z-0 p)
            (p "proxy" "cr" z-0 cr) (p "proxy" "pr1" z-0 sr)
            (p "proxy" "pr2" z-0 pr2) (p "proxy" "sr" z-0 sr-0)
            (p "proxy" "pms" z-0 pms) (p "proxy" "ppms" z-0 ppms)
            (p "proxy" "ppk" z-0 ppk) (p "proxy" "c" z-0 c)
            (p "proxy" "prxy" z-0 s) (p "proxy" "s" z-0 s)
            (p "proxy" "ca" z-0 ca) (prec z 0 z-0 0) (prec z 2 z-0 2)
            (prec z 4 z-0 4) (prec z 6 z-0 12) (prec z-0 1 z 1)
            (prec z-0 3 z 3) (prec z-0 11 z 5) (prec z-0 15 z 7)
            (uniq-at sr z-0 1)))
        (exists
          ((cookie-0 data) (cr-0 sr-0 pr2 sr-1 random32) (ppms random48)
            (ppk skey) (s-0 name) (z-0 z-1 strd))
          (and (= cookie (enc cookie-0 (hash ppk (hash pms cr sr))))
            (p "server" z-0 2) (p "proxy" z-1 16)
            (p "client" "cookie" z
              (enc cookie-0 (hash ppk (hash pms cr sr))))
            (p "server" "cr" z-0 cr-0) (p "server" "sr" z-0 sr-0)
            (p "server" "s" z-0 s-0) (p "server" "ca" z-0 ca)
            (p "proxy" "cookie" z-1 cookie-0)
            (p "proxy" "response" z-1 response)
            (p "proxy" "request" z-1 request) (p "proxy" "p" z-1 p)
            (p "proxy" "cr" z-1 cr) (p "proxy" "pr1" z-1 sr)
            (p "proxy" "pr2" z-1 pr2) (p "proxy" "sr" z-1 sr-1)
            (p "proxy" "pms" z-1 pms) (p "proxy" "ppms" z-1 ppms)
            (p "proxy" "ppk" z-1 ppk) (p "proxy" "c" z-1 c)
            (p "proxy" "prxy" z-1 s) (p "proxy" "s" z-1 s-0)
            (p "proxy" "ca" z-1 ca) (prec z 0 z-1 0) (prec z 2 z-1 2)
            (prec z 4 z-1 4) (prec z 6 z-1 12) (prec z-0 1 z-1 6)
            (prec z-1 1 z 1) (prec z-1 3 z 3) (prec z-1 11 z 5)
            (prec z-1 15 z 7) (uniq-at sr z-1 1)))
        (exists
          ((pr2 sr-0 cr-0 sr-1 random32) (s-0 name) (z-0 z-1 strd))
          (and (p "proxy" z-0 8) (p "server" z-1 2)
            (p "proxy" "p" z-0 p) (p "proxy" "cr" z-0 cr)
            (p "proxy" "pr1" z-0 sr) (p "proxy" "pr2" z-0 pr2)
            (p "proxy" "sr" z-0 sr-0) (p "proxy" "pms" z-0 pms)
            (p "proxy" "ppms" z-0 pms) (p "proxy" "c" z-0 c)
            (p "proxy" "prxy" z-0 s) (p "proxy" "s" z-0 s-0)
            (p "proxy" "ca" z-0 ca) (p "server" "cr" z-1 cr-0)
            (p "server" "sr" z-1 sr-1) (p "server" "s" z-1 s-0)
            (p "server" "ca" z-1 ca) (prec z 0 z-0 0) (prec z 2 z-0 2)
            (prec z 4 z-0 4) (prec z-0 1 z 1) (prec z-0 3 z 3)
            (prec z-0 7 z 5) (prec z-1 1 z-0 6) (uniq-at sr z-0 1)))
        (exists
          ((cookie-0 data) (pr2 sr-0 cr-0 sr-1 cr-1 sr-2 random32)
            (ppms random48) (ppk skey) (s-0 name) (z-0 z-1 strd))
          (and
            (= cookie (enc cookie-0 (hash ppk (hash ppms cr-1 sr-2))))
            (p "proxy" z-0 8) (p "server" z-1 2)
            (p "client" "cookie" z
              (enc cookie-0 (hash ppk (hash ppms cr-1 sr-2))))
            (p "proxy" "p" z-0 p) (p "proxy" "cr" z-0 cr)
            (p "proxy" "pr1" z-0 sr) (p "proxy" "pr2" z-0 pr2)
            (p "proxy" "sr" z-0 sr-0) (p "proxy" "pms" z-0 pms)
            (p "proxy" "ppms" z-0 pms) (p "proxy" "c" z-0 c)
            (p "proxy" "prxy" z-0 s) (p "proxy" "s" z-0 s-0)
            (p "proxy" "ca" z-0 ca) (p "server" "cr" z-1 cr-0)
            (p "server" "sr" z-1 sr-1) (p "server" "s" z-1 s-0)
            (p "server" "ca" z-1 ca) (prec z 0 z-0 0) (prec z 2 z-0 2)
            (prec z 4 z-0 4) (prec z-0 1 z 1) (prec z-0 3 z 3)
            (prec z-0 7 z 5) (prec z-1 1 z-0 6) (uniq-at sr z-0 1)))))))

(defprotocol sbp basic
  (defrole client
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie mesg) (request httprqst) (response httpdata))
    (trace (send cr)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (send (enc request cookie (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole proxy
    (vars (c prxy s ca name) (cr pr1 pr2 sr random32)
      (pms ppms random48) (p password) (cookie data) (ppk skey)
      (request httprqst) (response httpdata))
    (trace (recv cr)
      (send
        (cat pr1 prxy (pubk prxy)
          (enc (hash prxy (pubk prxy)) (privk ca))))
      (recv
        (cat (enc pms (pubk prxy))
          (enc
            (hash pms "client finished"
              (hash cr pr1
                (cat prxy (pubk prxy)
                  (enc (hash prxy (pubk prxy)) (privk ca)))
                (enc pms (pubk prxy))))
            (hash (hash pms cr pr1) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr pr1
              (cat prxy (pubk prxy)
                (enc (hash prxy (pubk prxy)) (privk ca)))
              (enc pms (pubk prxy))
              (enc
                (hash pms "client finished"
                  (hash cr pr1
                    (cat prxy (pubk prxy)
                      (enc (hash prxy (pubk prxy)) (privk ca)))
                    (enc pms (pubk prxy))))
                (hash (hash pms cr pr1) "client_write"))))
          (hash (hash pms cr pr1) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr pr1) "client_write")))
      (send pr2)
      (recv (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (send
        (cat (enc ppms (pubk s))
          (enc
            (hash ppms "client finished"
              (hash pr2 sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc ppms (pubk s))))
            (hash (hash ppms pr2 sr) "client_write"))))
      (recv
        (enc
          (hash ppms "server finished"
            (hash pr2 sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc ppms (pubk s))
              (enc
                (hash ppms "client finished"
                  (hash pr2 sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc ppms (pubk s))))
                (hash (hash ppms pr2 sr) "client_write"))))
          (hash (hash ppms pr2 sr) "server_write")))
      (send (enc "login" c p (hash (hash ppms pr2 sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash ppms pr2 sr) "server_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk (hash pms cr pr1)))
          (hash (hash pms cr pr1) "server_write")))
      (recv
        (enc request (enc cookie (hash ppk (hash pms cr pr1)))
          (hash (hash pms cr pr1) "client_write")))
      (send
        (enc request cookie (hash (hash ppms pr2 sr) "client_write")))
      (recv (enc response (hash (hash ppms pr2 sr) "client_write")))
      (send (enc response (hash (hash pms cr pr1) "server_write")))))
  (defrole server
    (vars (c s ca name) (cr sr random32) (pms random48) (p password)
      (cookie data) (request httprqst) (response httpdata))
    (trace (recv cr)
      (send (cat sr s (pubk s) (enc (hash s (pubk s)) (privk ca))))
      (recv
        (cat (enc pms (pubk s))
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                (enc pms (pubk s))))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr
              (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
              (enc pms (pubk s))
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s (pubk s) (enc (hash s (pubk s)) (privk ca)))
                    (enc pms (pubk s))))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" c p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (recv (enc request cookie (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (password atom) (httprqst atom) (httpdata atom) (random32 atom)
    (random48 atom)))

(defgoal sbp
  (forall
    ((cookie data) (request httprqst) (p password) (sr cr random32)
      (pms random48) (s ca c name) (z strd))
    (implies
      (and (p "server" z 7) (p "server" "cookie" z cookie)
        (p "server" "request" z request) (p "server" "p" z p)
        (p "server" "cr" z cr) (p "server" "sr" z sr)
        (p "server" "pms" z pms) (p "server" "c" z c)
        (p "server" "s" z s) (p "server" "ca" z ca) (non (privk s))
        (non (privk ca)) (pnon p) (uniq-at sr z 1))
      (exists
        ((cr-0 sr-0 random32) (pms-0 random48) (c-0 s-0 ca-0 name)
          (z-0 strd))
        (and (p "client" z-0 5) (p "client" "p" z-0 p)
          (p "client" "cr" z-0 cr-0) (p "client" "sr" z-0 sr-0)
          (p "client" "pms" z-0 pms-0) (p "client" "c" z-0 c-0)
          (p "client" "s" z-0 s-0) (p "client" "ca" z-0 ca-0)
          (prec z-0 4 z 4))))))

            (p "proxy" "response" z-0 response)
            (p "proxy" "request" z-0 request)
            (p "proxy" "p" z-0 p)
            (p "proxy" "cr" z-0 cr)
            (p "proxy" "pr1" z-0 sr)
            (p "proxy" "pr2" z-0 pr2)
            (p "proxy" "sr" z-0 sr-0)
            (p "proxy" "pms" z-0 pms)
            (p "proxy" "ppms" z-0 ppms)
            (p "proxy" "ppk" z-0 ppk)
            (p "proxy" "c" z-0 c)
            (p "proxy" "prxy" z-0 s)
            (p "proxy" "s" z-0 s)
            (p "proxy" "ca" z-0 ca)
            (uniq-at sr z-0 1)